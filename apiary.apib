HOST: http://localhost:12000/rest

--- Macaba REST API ---

---
Welcome to the Macaba board REST API documentation. This API allows anonymous and authorized
access (for admins, mods and VIP users) to board functions, such as listing boards, threads, posts,
creating threads and posts, uploading and downloading files, check for thread and board updates,
and utility calls like previewing markup before posting.
---

--
Authentication
Site management, user login. Some operations in sections below may require authentication, most of them
are open publicly though. After successful login you get a session token which is valid as long as you
don't stop using resources at least every few minutes, then session closes and you must relogin.
--

POST /login
> Content-Type: application/json
{ "user": "superadmin", "pass": "notgay" }
< 200
< Content-Type: application/json


--
Board Resource
Represents board resource, allows listing boards on site, listing board contents, managing boards
--

List available boards, returns list of board structures.
GET /board
< 200
< Content-Type: application/json
{ "boards": [
    { "id": "b", "category": "General", "title": "Random /b/", "short_name": "b",
    "anonymous_name": "Anonymous", "max_threads": 200, "max_thread_posts": 500,
    "max_thread_post_lock": 2500, "url": "/board/b/" }
    ]}

[admin] Create or edit board
POST /board
> Content-Type: application/json
{ "id": "b", "category": "General", "title": "Random /b/", "short_name": "b",
    "anonymous_name": "Anonymous", "max_threads": 200, "max_thread_posts": 500,
    "max_thread_post_lock": 2500 }
< 200
< Content-Type: application/json
{ "result": "ok", "url": "/board/b/" }

List threads in the board (full or paginated). Returns list of thread structures. "hidden" is
only visible to mods and admins. If `timestamp` is provided you get empty output if board not changed,
or full board contents if it did change. If `page` and `pagesize` are provided, you get paginated output at
requested `page` with requested `pagesize`. If only `page` is provided, `pagesize` defaults to 10.
GET /board/{board_id}{?timestamp,page,pagesize}
< 200
< Content-Type: application/json
{ "threads": [
    {"board_id": "b", "thread_id": "10012381", "hidden": false, "pinned": false,
    "read_only": false, "url": "board/b/thread/10012381" }
    ]}

Post a new thread
POST /board/{board_id}
> Content-Type: application/json
{ "subject": "Hello", "author": "", "email": "sage", "message": "I **pooped**", "attach": "base64encoded",
    "delete_password": "fgsfds" }
< 200
< Content-Type: application/json
{ "result": "ok", "url": "/board/b/thread/10012500" }

--
Thread resource
Represents thread of posts on the specific board. Allows listing thread contents, posting new threads,
replies, attaching files.
--

Get posts in thread (full or diff). If `timestamp` is provided, you only receive changes in
thread happened from this time. Thread contents is not designed to be paginated at the moment.
GET /board/{board_id}/thread/{thread_id}?t=timestamp
< 200
< Content-Type: application/json
{ "posts": [
    { "thread_id": "10012381", "board_id": "b", "post_id": "10012444", "subject": "Hello", "author": "",
    "email": "sage", "message": "I <strong>pooped</strong>", "message_raw": "I **pooped**",
    "created": "Wed, 27 Jan 2013, 03:29", "attach_ids": ["a7adb7f018e8fa89123bd90012"], "attach_deleted": false }
    ],
    "timestamp": "integer unixtime"
}

[mod] Modify thread flags. $action is manage or delete, 'ban' and 'update' fields in request are optional.
POST /board/{board_id}/thread/{thread_id}?do={action}
> Content-Type: application/json
{ "update": { "locked": true, "pinned": true, "hidden": true },
    "ban": { "reason": "board rules", "expires": "unix time" } }
< 200
< Content-Type: application/json
{ "result": "ok", "ban_id": "78ba981d8a8fe0918902" }

Post a new post in thread
POST /board/{board_id}/thread/{thread_id}
> Content-Type: application/json
{ "subject": "Hello", "author": "", "email": "sage", "message": "I **pooped**", "attach": "base64encoded",
    "delete_password": "fgsfds" }
< 200
< Content-Type: application/json
{ "result": "ok", "url": "/board/b/thread/10012500#i10012550" }

--
Board post resource
Represents a single post, with functions to get, modify, delete, moderate/ban.
--

[mod] Modify post or delete post
POST /board/{board_id}/post/{post_id}/manage
> Content-Type: application/json
{ "action": "delete|delete_file", "ban": { "reason": "board rules", "expires": "unix time" } }
< 200
< Content-Type: application/json
{ "result": "ok", "ban_id": "78ba981d8a8fe0918902" }

Runs markup processing over given piece of text, to help user preview his post.
POST /post/preview
> Content-Type: application/json
{ "markup": "Hello _world_ **derp**" }
< 200
< Content-Type: application/json
{ "html": "Hello <em>world</em> <strong>derp</strong>" }

--
Administration and moderation
Functions only available to authenticated mods and admins
--

[mod] Get list of bans
GET /ban/
< 200
< Content-Type: application/json
{ "bans": [
    { "ban_id": "78ba981d8a8fe0918902", "ip": "2.3.4.5", "subnet": 24,
    "reason": "board rules", "expires": "unix time", "author": "Anonymous" }
    ]}

[mod] Manually edit a ban
POST /ban/{ban_id}
> Content-Type: application/json
{ "delete": true, "update": { "expires": "new unix time" } }
< 200
< Content-Type: application/json
{ "result": "ok" }

[mod] Get list of ban appeal requests. Note to server dev: Comment and email should be
sanitized before printing to admin/mod screen
GET /appeal/
< 200
< Content-Type: application/json
{ "appeals": [
    { "ban_id": "78ba981d8a8fe0918902", "email": "user@example.com",
    "comment": "I didn't post it\nit was my cat walking on keyboard" }
    ]}

[mod] Post decision on appeal requests
POST /appeal/{ban_id}
> Content-Type: application/json
{ "decision": "satisfy|reject" }
< 200
< Content-Type: application/json
{ "result": "ok" }

